version: '3.1'

services:
  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
      
  rmq:
    image: rabbitmq:3.8.3-alpine
    container_name: rmq

  slave_worker:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: slv
    environment:
      type: slave
      NODE_NAME: slv_node_1 
      MONGODB_DATABASE: mymongodb
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: password
      MONGODB_HOSTNAME: mongodb1
    command: sh -c "sleep 8 && python slv.py"
    volumes:
      - .:/code
    links:
      - rmq
      - zoo
      - mongodb1
    depends_on:
      - rmq
      - zoo
      - mongodb1
    restart: on-failure
  
  
  master_worker:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: mst
    environment:
      type: master 
      NODE_NAME: mst_node
      MONGODB_DB: mymongodb
      MONGODB_USR: admin
      MONGODB_PASS: password
      MONGODB_NAME: mongodb_mst
    command: sh -c "sleep 10 && python mst.py"
    volumes:
      - .:/code
    links:
      - rmq
      - zoo
      - mongodb_mst
    depends_on:
      - rmq
      - zoo
      - mongodb_mst
    restart: on-failure

  
  orchestrator:
    build:                                                                                                                                                                                                                 
        context: .
        dockerfile: Dock
    command: sh -c "sleep 12 && python orc.py"
    image: orch:latest
    container_name: new_orc
    environment:
      MONGODB_DB: mymongodb
      MONGODB_USR: admin
      MONGODB_PASS: password
      MONGODB_NAME: mongodb_mst
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - rmq
      - zoo
    depends_on:
      - rmq
      - zoo
    restart: on-failure

  mongodb_mst:
    image: mongo:4.0
    container_name: mongodb_mst
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mymongodb
    volumes:
    - ./mongo-init2.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    
  mongodb1:
    image: mongo:4.0
    container_name: mongodb1
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mymongodb
    volumes:
    - ./mongo-init2.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
